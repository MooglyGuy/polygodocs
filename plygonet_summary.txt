command 0x99/0x19

18B-190
  set light vector [02ff,0300,0301] = [C000,C001,C002]
191-194
  [158] = [C003] / 2
196-1A3
  copy [C010] + [C003]*0x10 words to [6010] models, add 0xffff entry at end
1A4-1AE
  copy [D000] + [C004]*0x10 words to [7000] model transformation matrices
1AF-1B8
  copy [DF00] + [C003] words to [7F00] model transformation ptrs
1B9-1C5
  copy [DC00] + [C005] words to [7C00], add 0xffff entry at end
1C6-1D0
  [155] = [C006], [156] = [C007], [157] = [C008]
1D2-1E0
  [DFF8] = [312], [DFF9] = [313], [DFFA] = [314], [DFFB] = [315]
1E4-23A
  do [7F00] list transformations on [6010] models
    [7F00] entry [0], ptr to [7000] data, transformation matrix
23B
  call 652, reset list ptr [2F5] = 6000 , [2F6] = 8000, [2F7] = 7000
23F-240
  [159] count = 0
244-62C
  while [159] count < [158]  ( [C003] / 2 )
    process [6010] models
      if entry [0] sign bit 15 not set ( not end of list )
        255-25C
	  if entry [0] bit 14 set
	    [2FE] ptr light vector = 0004  (global setting ?)
	  else
	    [2FE] ptr light vector = 02FF  (local setting ?)
	25E-26D
	  test table entry [8 + entry[0] bits 13-8 ??], bank index bit 15, if set skip this model entry
	26E-275
	  set model ptr = table entry [8000 + entry[0] bits 7-0]
	278-286
	  if [157] ( [C008] no LOD ) != 0
	    set geometry data ptr = model[0]
	  else ( use LOD )
	    set geometry data ptr using entry [6] Z distance * [C006] scale
	287-2B0
	  [30F] = octant code for model [4,5,6] x,y,z using reference frame model [7,8,9],[A,B,C],[D,E,F]
	  [15C] = ptr geometry data [1 + octant code]
	  [15B] = model entry [2]
	2B2
	  X1, vertex count = geometry data [0]
	  R2, ptr vertex, geometry data [1]
	2B5-309
	  for each vertex
	    test vertex [0] bit octant code
	    if bit not set, skip vertex
	    else
	      transform vertex [1],[2],[3] x,y,z * model [6010] entry transformation, place results in list at [316], [1],[2],[3]
	      2F1
	        call 65F to get clip flags for vertex, set list [316] [0] = clip flags
	      if not clipped set [316], [4],[5] = x/z, y/z
	30A-30D
	  R0, ptr geometry data
	  X1, poly/triangle strip count, R0[0]
	  R0 += 1
	30E-62A
	  for each poly
	    poly ptr = R0[0], R0 += 1
	    [310] = poly [0] lighting flag
	    [311] = poly [1] vertex count
	    319-334
	      copy [316] vertex data for indices, poly[2],poly[3],poly[4] to [15E],[164][16A]
	    335-3B3
	      [30B],[30C],[30D] = triangle normal x,y,z
	      383 reject triangle if normal == 0
	    3B4-3DF
	      [302],[303],[304] = Nx,Ny,Nz normalized length triangle normal
	    3E0-3E9
	      if N dot first vertex !> 0, reject triangle
	    3EA-552 ?
	      check for clipped vertices, copy non-clipped vertices to list at [175]
	      [174] = vertex count ?
	    557-558
	      if vertex count == 0, goto next poly
	    57F-595
	      if poly [0] >= 0
	         I,intensity = pmem table entry for index ( [2FE] ptr light vector, L dot poly N )
	      else
	         I = 0F80
	    597-5AE
	      lookup [6010] model [2] color index in 2C00 table
	      5A0-5A5
	       if index bit set I *= [156] ( [C007] )
	    5AB-5D2
	      calculate 8 bit R,G,B * I to 5 bit R,G,B
	      push color to [2F7]  ( 7000 ) list
	      push [2F6] list ptr to [2F7] list
	    5D3-5E7
	      find max x and min x for poly, R2 = ptr to max x vertex
	      [2F4] = min x
	      push max x and min x to [2F5] ( 6000 ) list
	    5E9-621
	      ?? push remaining vertex info to [2F6] ( 8000 ) list  ??
632
  call 167 to clear unused [2F5] ( 6000 ) memory
  [314] = [2F5] ( 6000 ) ptr
  [315] = [2F6] ( 8000 ) ptr